// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool.WEBAPI.Data;

#nullable disable

namespace SmartSchool.WEBAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230603114028_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SmartSchool.WEBAPI.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Couses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tecnologia da Informação"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sistemas de Informação"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ciência da Computação"
                        });
                });

            modelBuilder.Entity("SmartSchool.WEBAPI.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Enroll")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            BirthDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enroll = 1,
                            Name = "Marta",
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6665),
                            Surname = "Kent",
                            Telephone = "33225555"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            BirthDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enroll = 2,
                            Name = "Paula",
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6691),
                            Surname = "Isabela",
                            Telephone = "3354288"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            BirthDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enroll = 3,
                            Name = "Laura",
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6699),
                            Surname = "Antonia",
                            Telephone = "55668899"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            BirthDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enroll = 4,
                            Name = "Luiza",
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6705),
                            Surname = "Maria",
                            Telephone = "6565659"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            BirthDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enroll = 5,
                            Name = "Lucas",
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6711),
                            Surname = "Machado",
                            Telephone = "565685415"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            BirthDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enroll = 6,
                            Name = "Pedro",
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6721),
                            Surname = "Alvares",
                            Telephone = "456454545"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            BirthDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enroll = 7,
                            Name = "Paulo",
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6729),
                            Surname = "José",
                            Telephone = "9874512"
                        });
                });

            modelBuilder.Entity("SmartSchool.WEBAPI.Models.StudentCouse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CouseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("courseId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CouseId");

                    b.HasIndex("courseId");

                    b.ToTable("StudentCouses");
                });

            modelBuilder.Entity("SmartSchool.WEBAPI.Models.StudentSubject", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            SubjectId = 2,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6779)
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 4,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6788)
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 5,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6791)
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 1,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6793)
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 2,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6797)
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 5,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6801)
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 1,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6804)
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 2,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6807)
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 3,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6810)
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 1,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6815)
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 4,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6818)
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 5,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6821)
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 4,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6823)
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 5,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6826)
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 1,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6830)
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 2,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6833)
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 3,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6836)
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 4,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6841)
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 1,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6844)
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 2,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6847)
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 3,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6850)
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 4,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6853)
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 5,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6857)
                        });
                });

            modelBuilder.Entity("SmartSchool.WEBAPI.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreRequisiteId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("Workload")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("PreRequisiteId");

                    b.HasIndex("TeacherId");

                    b.ToTable("subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Name = "Matemática",
                            TeacherId = 1,
                            Workload = 0
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 3,
                            Name = "Matemática",
                            TeacherId = 1,
                            Workload = 0
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Name = "Física",
                            TeacherId = 2,
                            Workload = 0
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 1,
                            Name = "Português",
                            TeacherId = 3,
                            Workload = 0
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 1,
                            Name = "Inglês",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 2,
                            Name = "Inglês",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 3,
                            Name = "Inglês",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 1,
                            Name = "Programação",
                            TeacherId = 5,
                            Workload = 0
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 2,
                            Name = "Programação",
                            TeacherId = 5,
                            Workload = 0
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 3,
                            Name = "Programação",
                            TeacherId = 5,
                            Workload = 0
                        });
                });

            modelBuilder.Entity("SmartSchool.WEBAPI.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Register")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Name = "Lauro",
                            Register = 1,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6115),
                            Surname = "Oliveira"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Name = "Roberto",
                            Register = 2,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6195),
                            Surname = "Soares"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Name = "Ronaldo",
                            Register = 3,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6199),
                            Surname = "Marconi"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Name = "Rodrigo",
                            Register = 4,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6202),
                            Surname = "Carvalho"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            Name = "Alexandre",
                            Register = 5,
                            StartDate = new DateTime(2023, 6, 3, 12, 40, 27, 124, DateTimeKind.Local).AddTicks(6205),
                            Surname = "Montanha"
                        });
                });

            modelBuilder.Entity("SmartSchool.WEBAPI.Models.StudentCouse", b =>
                {
                    b.HasOne("SmartSchool.WEBAPI.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WEBAPI.Models.Course", "course")
                        .WithMany()
                        .HasForeignKey("courseId");

                    b.Navigation("Student");

                    b.Navigation("course");
                });

            modelBuilder.Entity("SmartSchool.WEBAPI.Models.StudentSubject", b =>
                {
                    b.HasOne("SmartSchool.WEBAPI.Models.Student", "Student")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WEBAPI.Models.Subject", "Subject")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SmartSchool.WEBAPI.Models.Subject", b =>
                {
                    b.HasOne("SmartSchool.WEBAPI.Models.Course", "Course")
                        .WithMany("Subjects")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WEBAPI.Models.Subject", "PreRequisite")
                        .WithMany()
                        .HasForeignKey("PreRequisiteId");

                    b.HasOne("SmartSchool.WEBAPI.Models.Teacher", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("PreRequisite");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SmartSchool.WEBAPI.Models.Course", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("SmartSchool.WEBAPI.Models.Student", b =>
                {
                    b.Navigation("StudentSubjects");
                });

            modelBuilder.Entity("SmartSchool.WEBAPI.Models.Subject", b =>
                {
                    b.Navigation("StudentSubjects");
                });

            modelBuilder.Entity("SmartSchool.WEBAPI.Models.Teacher", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
